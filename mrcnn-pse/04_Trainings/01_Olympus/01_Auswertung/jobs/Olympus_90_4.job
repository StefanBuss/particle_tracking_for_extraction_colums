#!/usr/bin/zsh

########################################################
##### Batch Skript fuer das Training des Mask R-CNN ####
####### Stephan Sibirtsev and Mathias Neufang ##########
########################################################

#### SBATCH EINTRAEGE ERSTELLEN ####
#### Pfade muessen entsprechend angepasst werden ####

#### Job Name ####
#SBATCH --job-name=Olympus_90_4

#### Pfad und Name der Outputdatei der Job Durchfuehrung ####
#SBATCH --output=/home/ss002458/A_DATEN/Jobs/output/%x_%J_output.txt

#### Laufdauer des Jobs (wird durch das Testen von Jobs auf dem CPU node ermittelt, Rechendauer pro ausgewertetes Bild mit Anzahl der auszuwertenden Bilder und ggf. Sicherheitsfaktor multiplizieren) ####
#SBATCH --time=0-02:00:00

#### Arbeitsspeicherbedarf pro CPU (wird durch das Testen von Jobs auf dem GPU node ermittelt, ggf. Sicherheitsfaktor draufpacken. Arbeitsspeicherbedarf hier: 3G) ####
#SBATCH --mem-per-cpu=3G

#### Arbeitsspeicherbedarf pro GPU (wird durch das Testen von Jobs auf dem GPU node ermittelt, ggf. Sicherheitsfaktor draufpacken. Arbeitsspeicherbedarf hier: 5G) ####
#SBATCH --mem-per-gpu=3G

#### Email Adresse ####
#SBATCH --mail-user=Stephan.Sibirtsev@avt.rwth-aachen.de

#### Emails die erhalten werden sollen ####
#SBATCH --mail-type=ALL

#### Anzahl an tasks, die durchgefuehrt werden sollen ####
#SBATCH --ntasks=1

#### Anzahl der benoetigten GPUs pro node ####
#SBATCH --gres=gpu:1

#### TERMINAL EINTRAEGE ERSTELLEN ####
#### Pfade muessen entsprechend angepasst werden ####

#### Das Cuda Modul laden ####
module load cuda/100

#### Pfad in welchem sich Anaconda befindet exportieren ####
export PATH=$PATH:/home/ss002458/anaconda3/bin

#### Umgebung aktivieren ####
source activate env_mrcnn_gpu

#### Sich in den Pfad, wo sich das droplet.py Skript befindet navigieren ####
cd /home/ss002458/A_DATEN/Python/Mask_R_CNN/samples/droplet/

#### Das droplet.py Skript ausfuehren ####
python train_droplet.py --dataset_path=Olympus --name_result_file=Olympus_90 --new_weights_path=Olympus_90_4 --base_weights=coco --image_max=512 --masks=0 --device=1 --images_gpu=1 --early_stopping=0 --epochs=50 --dataset_quantity=100 --k_fold=5 --k_fold_val=4
